@using ProductConstructionService.Client
@using ProductConstructionService.Client.Models;
@using TextCopy;
@inject IClipboard Clipboard
@inject IProductConstructionServiceApi PcsApi

@if (_build == null || _commit == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size48.CheckmarkCircle())" Color="@Color.Success" />
        <FluentStack Orientation="Orientation.Vertical">
            <FluentStack VerticalAlignment="VerticalAlignment.Center">
                <h3>
                    <span> @GetRepository() </span>
                    <span> @_build.AzureDevOpsBuildNumber </span>
                </h3>
                <FluentButton IconEnd="@(new Icons.Regular.Size16.Copy())" Appearance="Appearance.Accent" OnClick="@(() => SetBarClipboard(_build.Id.ToString()))">
                    @_build.Id
                </FluentButton>
                <FluentSpacer />
                <FluentAnchor Appearance="Appearance.Accent" Href="@GetBuildUri()" Target="_blank">
                    Go to build in Azure DevOps
                </FluentAnchor>
            </FluentStack>
            <div>
                <FluentAnchor Href="@GetCommitUri()" Target="_blank" Appearance="Appearance.Accent">
                    @GetShortCommitMessage()
                </FluentAnchor>
                <FluentButton IconStart="@(new Icons.Regular.Size16.Clipboard())" Appearance="Appearance.Accent" OnClick="@(() => SetBarClipboard(_commit.Sha))" />
            </div>
            <div Style="color: forestgreen">
                @_build.DateProduced.ToString("yyyy-mm-dd")
            </div>
            <div Style="color: forestgreen">
                This is the most recent build
            </div>
        </FluentStack>
    </FluentStack>
}

@code {
    [Parameter]
    public int? ChannelId { get; set; }

    [Parameter]
    public string? Repository { get; set; }

    private ProductConstructionService.Client.Models.Build? _build;
    private ProductConstructionService.Client.Models.Commit? _commit;

    protected override async Task OnInitializedAsync()
    {
        // TODO we should also be able to initialize with a specific bar ID, not just the latest build
        _build = await PcsApi.Builds.GetLatestAsync(repository: Repository, channelId: ChannelId);
        _commit = await PcsApi.Builds.GetCommitAsync(_build.Id);
    }

    private string GetShortCommitMessage()
    {
        string message = _commit!.Message;
        message = string.Join(' ', message.Split(' ').Take(7));
        Console.WriteLine(message);
        return message;
    }

    private string GetRepository()
    {
        return _build!.GitHubRepository ?? _build!.AzureDevOpsRepository;
    }

    private async Task SetBarClipboard(string text)
    {
        await Clipboard.SetTextAsync(text);
    }

    private string GetBuildUri()
    {
        if (!string.IsNullOrEmpty(_build!.AzureDevOpsAccount) &&
            !string.IsNullOrEmpty(_build!.AzureDevOpsProject) &&
            _build!.AzureDevOpsBuildId.HasValue)
        {
            return $"https://dev.azure.com/{_build!.AzureDevOpsAccount}/{_build!.AzureDevOpsProject}/_build/results?buildId={_build!.AzureDevOpsBuildId.Value}";
        }
        return string.Empty;
    }

    private string GetCommitUri() => $"{GetRepository()}/commit/{_commit!.Sha}";
}
